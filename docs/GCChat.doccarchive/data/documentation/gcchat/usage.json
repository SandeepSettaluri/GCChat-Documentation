{"primaryContentSections":[{"kind":"content","content":[{"anchor":"initialize","level":2,"type":"heading","text":"initialize()"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This must be the first function that has to be called from the SDK. It checks the validity of sdk and sets the delegate for receiving callbacks for messages and other events."}]},{"type":"codeListing","syntax":"swift","code":["GcChat.shared.initialize(delegate: self) {","    \/\/ handle success","    print(\"Successfully initialized\")","} failure { error in","    \/\/ handle failure","    print(\"Initialization failed with error: \\(error)\")","}"]},{"anchor":"subscribe","level":2,"type":"heading","text":"subscribe()"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This must be function to be called whenever the user logs in. It connects to the web socket and the messages will start being received."}]},{"type":"codeListing","syntax":"swift","code":["GcChat.shared.subscribe(phoneNumber: phoneNumber)"]},{"anchor":"unsubscribe","level":2,"type":"heading","text":"unsubscribe()"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This must be function to be called whenever the user logs out. It disconnects the web socket and the messages will not be received."}]},{"type":"codeListing","syntax":"swift","code":["GcChat.shared.unsubscribe()"]},{"anchor":"getListOfChats","level":2,"type":"heading","text":"getListOfChats()"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is called to get the list of chats of the logged in user."}]},{"type":"codeListing","syntax":"swift","code":["GcChat.shared.getListOfChats { sessions in","    self.chatSessions = sessions","    DispatchQueue.main.async {","        if sessions.isEmpty {","            self.noChatsLabel.isHidden = false","        } else {","            self.noChatsLabel.isHidden = true","        }","        self.chatSessionsTableView.reloadData()","    }","    print(sessions)","} failure: { error in","    print(error)","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/gcchat\/usage"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/gcchat\/usage"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/com.gamechange.GCChat\/documentation\/GCChat\/Usage","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article shows the usage of the SDK with some code snippets for the important methods"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Usage","role":"article","modules":[{"name":"GCChat"}]},"hierarchy":{"paths":[["doc:\/\/com.gamechange.GCChat\/documentation\/GCChat"]]},"references":{"doc://com.gamechange.GCChat/documentation/GCChat":{"role":"collection","title":"GCChat","abstract":[{"type":"text","text":"GCChat is used as an instant chat messaging framework between two mobile devices. It acts as the interface between the client app and our backend to provide instant messaging in individual chats and group chats. All the messages are end to end encrypted to ensure the privacy of the users."}],"identifier":"doc:\/\/com.gamechange.GCChat\/documentation\/GCChat","kind":"symbol","type":"topic","url":"\/documentation\/gcchat"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null}],"traits":[{"interfaceLanguage":"occ"}]}]}